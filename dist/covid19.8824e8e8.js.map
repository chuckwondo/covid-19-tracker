{"version":3,"sources":["index.js"],"names":["$","document","ready","$menuButton","$dropDown","$warning","on","slideToggle","fadeOut","country","deaths","getElementById","cases","recovered","state","stateB","p","createElement","gh","url","countryUrl","getData","fetch","then","response","ok","json","Error","networkError","console","log","message","data","innerHTML","toFixed","getUsaData","countryData","todayCases","appendChild","getGhanaData","ghanaData"],"mappings":";AAAAA,EAAEC,UAAUC,MAAM,WACVC,IAAAA,EAAcH,EAAE,eAChBI,EAAYJ,EAAE,aACdK,EAAWL,EAAE,SAEnBG,EAAYG,GAAG,QAAS,WACtBF,EAAUG,cACVF,EAASG,QAAQ,SAKrB,IAUIC,EAVEC,EAAST,SAASU,eAAe,UACjCC,EAAQX,SAASU,eAAe,SAChCE,EAAYZ,SAASU,eAAe,aACtCG,EAAQb,SAASU,eAAe,WAChCI,EAASd,SAASU,eAAe,YACjCK,EAAIf,SAASgB,cAAc,KAC3BC,EAAKjB,SAASgB,cAAc,KAE1BE,EAAM,+CACNC,EAAa,sDAGbC,EAAU,WACdC,MAAMH,GACHI,KACC,SAAAC,GACMA,GAAAA,EAASC,GACJD,OAAAA,EAASE,OAEZ,MAAA,IAAIC,MAAM,oDAElB,SAAAC,GACEC,QAAQC,IAAIF,EAAaG,WAG5BR,KAAK,SAAAS,GAEJtB,EAAOuB,UACLD,EAAKtB,OACL,QACE,IAAMsB,EAAKtB,OAAUsB,EAAKpB,OAAOsB,QAAQ,GAC3C,IACFtB,EAAMqB,UAAYD,EAAKpB,MACvBC,EAAUoB,UACRD,EAAKnB,UACL,QACE,IAAMmB,EAAKnB,UAAamB,EAAKpB,OAAOsB,QAAQ,GAC9C,OAIRb,IAEA,IAAMc,EAAa,WACjB1B,EAAU,MAEVa,MADiBF,EAAaX,GAE3Bc,KACC,SAAAC,GACMA,GAAAA,EAASC,GACJD,OAAAA,EAASE,OAEZ,MAAA,IAAIC,MAAM,oDAElB,SAAAC,GACEC,QAAQC,IAAIF,EAAaG,WAG5BR,KAAK,SAAAa,GAEJpB,EAAEiB,UACAG,EAAY3B,QACZ,YAEA2B,EAAYxB,MACZ,cAEAwB,EAAY1B,OACZ,WAEA0B,EAAYC,WACdvB,EAAMwB,YAAYtB,MAIxBmB,IAEA,IAAMI,EAAe,WACnB9B,EAAU,QAEVa,MADiBF,EAAaX,GAE3Bc,KACC,SAAAC,GACMA,GAAAA,EAASC,GACJD,OAAAA,EAASE,OAEZ,MAAA,IAAIC,MAAM,oDAElB,SAAAC,GACEC,QAAQC,IAAIF,EAAaG,WAG5BR,KAAK,SAAAiB,GAEJtB,EAAGe,UACDO,EAAU/B,QACV,YAEA+B,EAAU5B,MACV,cAEA4B,EAAU9B,OACV,WAEA8B,EAAUH,WACZtB,EAAOuB,YAAYpB,MAIzBqB","file":"covid19.8824e8e8.js","sourceRoot":"..","sourcesContent":["$(document).ready(() => {\n  const $menuButton = $(\".menuButton\");\n  const $dropDown = $(\"#dropDown\");\n  const $warning = $(\".warn\");\n\n  $menuButton.on(\"click\", () => {\n    $dropDown.slideToggle();\n    $warning.fadeOut(400);\n  });\n});\n\n//console.log('Hello World!')\nconst deaths = document.getElementById(\"deaths\");\nconst cases = document.getElementById(\"cases\");\nconst recovered = document.getElementById(\"recovered\");\nlet state = document.getElementById(\"country\");\nlet stateB = document.getElementById(\"country2\");\nlet p = document.createElement(\"p\");\nlet gh = document.createElement(\"p\");\n\nconst url = \"https://coronavirus-19-api.herokuapp.com/all\";\nconst countryUrl = \"https://coronavirus-19-api.herokuapp.com/countries/\";\nlet country;\n\nconst getData = () => {\n  fetch(url)\n    .then(\n      response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"SNAFU! Nothing returned from the fetch request!\");\n      },\n      networkError => {\n        console.log(networkError.message);\n      }\n    )\n    .then(data => {\n      //console.log(data);\n      deaths.innerHTML =\n        data.deaths +\n        \" or \" +\n        ((100 * data.deaths) / data.cases).toFixed(2) +\n        \"%\";\n      cases.innerHTML = data.cases;\n      recovered.innerHTML =\n        data.recovered +\n        \" or \" +\n        ((100 * data.recovered) / data.cases).toFixed(2) +\n        \"%\";\n    });\n};\n\ngetData();\n\nconst getUsaData = () => {\n  country = \"USA\";\n  const national = countryUrl + country;\n  fetch(national)\n    .then(\n      response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"SNAFU! Nothing returned from the fetch request!\");\n      },\n      networkError => {\n        console.log(networkError.message);\n      }\n    )\n    .then(countryData => {\n      //console.log(countryData);\n      p.innerHTML =\n        countryData.country +\n        \": \" +\n        \"Total: \" +\n        countryData.cases +\n        \" | \" +\n        \"Deaths: \" +\n        countryData.deaths +\n        \" | \" +\n        \"New: \" +\n        countryData.todayCases;\n      state.appendChild(p);\n    });\n};\n\ngetUsaData();\n\nconst getGhanaData = () => {\n  country = \"Ghana\";\n  const national = countryUrl + country;\n  fetch(national)\n    .then(\n      response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"SNAFU! Nothing returned from the fetch request!\");\n      },\n      networkError => {\n        console.log(networkError.message);\n      }\n    )\n    .then(ghanaData => {\n      //console.log(ghanaData);\n      gh.innerHTML =\n        ghanaData.country +\n        \": \" +\n        \"Total: \" +\n        ghanaData.cases +\n        \" | \" +\n        \"Deaths: \" +\n        ghanaData.deaths +\n        \" | \" +\n        \"New: \" +\n        ghanaData.todayCases;\n      stateB.appendChild(gh);\n    });\n};\n\ngetGhanaData();\n"]}