{"version":3,"sources":["index.js"],"names":["$","document","ready","$menuButton","$dropDown","on","slideToggle","deaths","getElementById","cases","recovered","url","getData","fetch","then","response","ok","json","Error","networkError","console","log","message","data","innerHTML","toFixed"],"mappings":"AAAAA,CAAC,CAACC,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAM;AACpB,MAAMC,WAAW,GAAGH,CAAC,CAAC,aAAD,CAArB;AACA,MAAMI,SAAS,GAAGJ,CAAC,CAAC,WAAD,CAAnB;AAEAG,EAAAA,WAAW,CAACE,EAAZ,CAAe,OAAf,EAAwB,YAAM;AAC1BD,IAAAA,SAAS,CAACE,WAAV;AACH,GAFD;AAKH,CATD,GAYA;;AACA,IAAMC,MAAM,GAAGN,QAAQ,CAACO,cAAT,CAAwB,QAAxB,CAAf;AACA,IAAMC,KAAK,GAAGR,QAAQ,CAACO,cAAT,CAAwB,OAAxB,CAAd;AACA,IAAME,SAAS,GAAGT,QAAQ,CAACO,cAAT,CAAwB,WAAxB,CAAlB;AAEA,IAAMG,GAAG,GAAG,8CAAZ;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,EAAAA,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAgB,UAAAC,QAAQ,EAAI;AACxB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,UAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACH,GALD,EAKG,UAAAC,YAAY,EAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,OAAzB;AACH,GAPD,EAOGR,IAPH,CAOQ,UAAAS,IAAI,EAAI;AACZ;AACAhB,IAAAA,MAAM,CAACiB,SAAP,GAAmBD,IAAI,CAAChB,MAAL,GAAc,MAAd,GAAuB,CAAE,MAAMgB,IAAI,CAAChB,MAAZ,GAAsBgB,IAAI,CAACd,KAA5B,EAAmCgB,OAAnC,CAA2C,CAA3C,CAAvB,GAAuE,GAA1F;AACAhB,IAAAA,KAAK,CAACe,SAAN,GAAkBD,IAAI,CAACd,KAAvB;AACAC,IAAAA,SAAS,CAACc,SAAV,GAAsBD,IAAI,CAACb,SAAL,GAAiB,MAAjB,GAA0B,CAAE,MAAMa,IAAI,CAACb,SAAZ,GAAyBa,IAAI,CAACd,KAA/B,EAAsCgB,OAAtC,CAA8C,CAA9C,CAA1B,GAA6E,GAAnG;AACH,GAZD;AAaH,CAdD;;AAgBAb,OAAO","file":"covid19.e31bb0bc.js","sourceRoot":"..","sourcesContent":["$(document).ready(() => {\n    const $menuButton = $('.menuButton');\n    const $dropDown = $('#dropDown');\n\n    $menuButton.on('click', () => {\n        $dropDown.slideToggle();\n    })\n\n\n})\n\n\n//console.log('Hello World!')\nconst deaths = document.getElementById('deaths');\nconst cases = document.getElementById('cases');\nconst recovered = document.getElementById('recovered');\n\nconst url = 'https://coronavirus-19-api.herokuapp.com/all';\n\nconst getData = () => {\n    fetch(url).then(response => {\n        if (response.ok) {\n            return response.json()\n        }\n        throw new Error('SNAFU! Nothing returned from the fetch request!')\n    }, networkError => {\n        console.log(networkError.message)\n    }).then(data => {\n        //console.log(data);\n        deaths.innerHTML = data.deaths + ' or ' + ((100 * data.deaths) / data.cases).toFixed(2) + '%';\n        cases.innerHTML = data.cases;\n        recovered.innerHTML = data.recovered + ' or ' + ((100 * data.recovered) / data.cases).toFixed(2) + '%';\n    })\n}\n\ngetData();"]}